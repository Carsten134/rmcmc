% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MultidimSlice.R
\name{MVSlice}
\alias{MVSlice}
\title{Multidimensional Slice sampling}
\usage{
MVSlice(it, x0, w, f, L.lim, R.lim)
}
\arguments{
\item{it}{numeric: number of iterations}

\item{x0}{numeric:starting point of algorithm}

\item{w}{numeric vector: starting intervall}

\item{f}{function: density to sample from}
}
\description{
Hyperrectangle with shrinkage analogous to one-dimensional case

Choose Hyperrectangle with appropiate sizes w_i in every dimension i and
position it randomly around x_0. Dont expand, as its difficult. Just
shrink until point within S is found.

Maybe choose size w_i as  2 * sd_i? So it scales to width of distribution

(alternative: Doubling Procedure with random sampling, that stops, when point
outside Slice is sampled)
}
\examples{
## Try out multivariate normal distribution:
## define f:
fnormal <- function(x) {
  mu = c(0, 0)
  Sigma = matrix(c(9, 8, 8, 9), nrow = 2)
  n <- length(x)
  fx <- 1/sqrt((2 * pi)^n * det(Sigma)) *
    exp(-0.5 * t(x - mu) \%*\% solve(Sigma) \%*\% (x - mu))
  return(fx)
}?


mvnormaltest <- MVSlice(1000, x0 = c(0, 0), w = c(100, 100), f = fnormal,
                        L.lim = c(-Inf, -Inf), R.lim = c(Inf, Inf))

plot(mvnormaltest,
     col = rep(rainbow(10), each = 100))



## First impressions: Choice of w is really important, w too small leads
## to very bad results. Larger w seems to be a lot better.
## c(1, 1) is ok, c(0.5, 0.5) already shows irregularities and c(0.1, 0.1)
## is a desaster (autocorrelation to high?)
## Maybe choose something like w = diag(Sigma^2)



}
